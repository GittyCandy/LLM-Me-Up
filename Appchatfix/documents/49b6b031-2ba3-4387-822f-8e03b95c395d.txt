University of Wollongong in Dubai CSIT242 - Mobile Application Development Architectural patterns (MVC , MVP, & MVVM) Dr. Haitham Yaish 2 Outline Introduction 1 Why do we need design patterns? 2 3 4 Model View Controller (MVC) 5 Model�view�presenter (MVP) Model�view�viewmodel (MVVM) 6 MVC vs MVP vs MVVM 3 The application development process has become significantly vast and complex due to a variety of features that are now required in modern applications. To cater to that, there are multiple options available in the tech industry for architecture design patterns. The three most prominent ones are: - Model View Controller (MVC) - Model View View-Model (MVVM) - Model View Presenter (MVP). 4 Introduction Why do we need design patterns? These design patterns or architectures were introduced to make the application development process more manageable by separating the responsibilities of: 1. visualization (how the application will look like). 2. Processing (how it will work on different devices) 3. Data management (how data will be processed). 5 Why do we need design patterns? The primary goal is to attain more modularity, testability, flexibility and maintainability. It enables the software engineers to follow convenient practices and allows them to design cleaner and more manageable code to reduce the complexity of the application. 6 Model View Controller (MVC) Is commonly used for developing user interfaces that divide the related program logic into three interconnected elements. This is done to separate internal representations of information from the ways information is presented to and accepted from the user. MVC has three components: - Model - View - Controller. 7 Model View Controller (MVC) Model Is the central component of the pattern. It directly manages the data, logic and rules of the application. 8 Model View Controller (MVC) View Any representation of information such as a chart, Diagram, data, or table 9 Model View Controller (MVC) Controller Accepts input and converts it to commands for the model or view. 10 Model�view�presenter (MVP) Is a derivation of the model�view�controller (MVC) architectural pattern. Is used mostly for building user interfaces. In MVP, the presenter assumes the functionality of the "middle-man". In MVP, all presentation logic is pushed to the presenter 11 Model�view�presenter (MVP) In MVC, user inputs are handled by the Controller that instructs the model for further operations. But in MVP, user inputs are handled by the view that instructs the presenter to call appropriate functions. 12 Model�view�viewmodel (MVVM) Model�view�viewmodel is also referred to as model�view�binder. Is an architectural pattern in computer software that facilitates the separation of the development of the Graphical User Interface (GUI). The viewmodel of MVVM is a value converter, meaning it is responsible for exposing the data objects from the model in such a way they can be easily managed and presented. 13 Model�view�viewmodel (MVVM) In this respect, the viewmodel is more model than view, and handles most (if not all) of the view's display logic. The viewmodel may implement a mediator pattern, organizing access to the back-end logic around the set of use cases supported by the view. 14 MVC vs MVP vs MVVM 15 MVC vs MVP vs MVVM 16 MVC vs MVP vs MVVM 17 MVC vs MVP vs MVVM 18 MVC vs MVP vs MVVM 19 Summary Despite the differences of the different design patterns, we cannot decide on which pattern wins this battle. All three design patterns offer some unique and exclusive advantages that can be very useful in different situations. MVC vs MVP vs MVVM: it would be a tie in this case because all three of them offer different usability based on the requirements of the application to be developed. 20 MVC vs MVP vs MVVM � Top 10 Differences You Should Know, https://xperti.io/blogs/mvc-vs-mvp-vs-mvvm/ . Last Accessed 2 March 2025 Model�view�controller, https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller . Last Accessed 2 March 2025 Model�view�presenter, https://en.wikipedia.org/wiki/Model-view-presenter . Last Accessed 2 March 2025 Model�view�viewmodel, https://en.wikipedia.org/wiki/Model�view�viewmodel . Last Accessed 2 March 2025 Difference Between MVC and MVP Patterns. https://www.baeldung.com/mvc-vs-mvp-pattern#:~:text=User%20Input%3A%20In%20MVC%2C%20user,between%20the%20controller%20and%20view. Last Accessed 2 March 2025 21 References 22 THANK YOU
